{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/module/Constants.ts","src/module/Main.ts","src/module/Setup.ts","src/module/actor/SR5ActorProxy.ts","src/module/actor/SR5BaseActor.ts","src/module/actor/SR5Grunt.ts","src/module/actor/SR5Runner.ts","src/module/actor/factory/AbstractActorFactory.ts","src/module/actor/factory/BaseActorFactory.ts","src/module/actor/factory/GruntFactory.ts","src/module/actor/factory/RunnerFactory.ts","src/module/actor/sheet/SR5BaseActorSheet.ts","src/module/actor/sheet/SR5GruntSheet.ts","src/module/actor/sheet/SR5RunnerSheet.ts","src/module/actor/types/ActorType.ts","src/module/common/Attribute.ts","src/module/common/Skills.ts","src/module/item/SR5ItemProxy.ts","src/module/item/factory/AbstractItemFactory.ts","src/module/item/factory/AmmunitionFactory.ts","src/module/item/factory/ArmorFactory.ts","src/module/item/factory/BaseItemFactory.ts","src/module/item/factory/MetatypeFactory.ts","src/module/item/factory/WeaponFactory.ts","src/module/item/sheet/SR5BaseItemSheet.ts","src/module/item/types/ItemType.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","export const SYSTEM_NAME = 'shadowrun5e';\r\n","import Setup from './Setup';\r\n\r\nSetup.run();\r\n\r\nCONFIG.debug.hooks = true;","import SR5ActorProxy from './actor/SR5ActorProxy';\r\nimport { SYSTEM_NAME } from './Constants';\r\nimport SR5BaseActorSheet from './actor/sheet/SR5BaseActorSheet';\r\nimport SR5ItemProxy from './item/SR5ItemProxy';\r\nimport SR5BaseItemSheet from './item/sheet/SR5BaseItemSheet';\r\nimport SR5RunnerSheet from './actor/sheet/SR5RunnerSheet';\r\nimport SR5GruntSheet from './actor/sheet/SR5GruntSheet';\r\n\r\nexport default class Setup {\r\n    public static run(): void {\r\n        Hooks.once('init', this.init);\r\n        Hooks.once('setup', this.setup);\r\n        Hooks.once('ready', this.ready);\r\n    }\r\n\r\n    // Tasks called on init\r\n    protected static init(): Promise<void> {\r\n        // Register actor + sheets\r\n        CONFIG.Actor.entityClass = SR5ActorProxy;\r\n        Actors.unregisterSheet('core', ActorSheet);\r\n        Actors.registerSheet(SYSTEM_NAME, SR5BaseActorSheet, { makeDefault: true });\r\n        Actors.registerSheet(SYSTEM_NAME, SR5RunnerSheet, { makeDefault: false });\r\n        Actors.registerSheet(SYSTEM_NAME, SR5GruntSheet, { makeDefault: false });\r\n\r\n        // Register item + sheets\r\n        CONFIG.Item.entityClass = SR5ItemProxy;\r\n        Items.unregisterSheet('core', ItemSheet);\r\n        Items.registerSheet(SYSTEM_NAME, SR5BaseItemSheet, { makeDefault: true });\r\n\r\n        Hooks.on('preCreateItem', (...args) => {\r\n            console.warn(args);\r\n        });\r\n\r\n        // Register Handlebars Helpers\r\n        // if equal\r\n        Handlebars.registerHelper('ife', function (v1, v2, options) {\r\n            console.warn(v1);\r\n            console.warn(v2);\r\n            if (v1 === v2) return options.fn(this);\r\n            else return options.inverse(this);\r\n        });\r\n        // if not equal\r\n        Handlebars.registerHelper('ifne', function (v1, v2, options) {\r\n            if (v1 !== v2) return options.fn(this);\r\n            else return options.inverse(this);\r\n        });\r\n        // if greater than\r\n        Handlebars.registerHelper('ifgt', function (v1, v2, options) {\r\n            if (v1 > v2) return options.fn(this);\r\n            else return options.inverse(this);\r\n        });\r\n        // if greater than equal to\r\n        Handlebars.registerHelper('ifge', function (v1, v2, options) {\r\n            if (v1 >= v2) return options.fn(this);\r\n            else return options.inverse(this);\r\n        });\r\n        // if less than\r\n        Handlebars.registerHelper('iflt', function (v1, v2, options) {\r\n            if (v1 < v2) return options.fn(this);\r\n            else return options.inverse(this);\r\n        });\r\n        // if less than equal to\r\n        Handlebars.registerHelper('ifle', function (v1, v2, options) {\r\n            if (v1 <= v2) return options.fn(this);\r\n            else return options.inverse(this);\r\n        });\r\n        // if includes\r\n        Handlebars.registerHelper('ifin', function (val, arr, options) {\r\n            if (arr.includes(val)) return options.fn(this);\r\n            else return options.inverse(this);\r\n        });\r\n\r\n        // Above code will run synchronously with Foundry\r\n        // Async tasks can be done by returning a new Promise\r\n        return Promise.resolve();\r\n    }\r\n    protected static async setup(): Promise<void> {}\r\n    protected static async ready(): Promise<void> {}\r\n}\r\n","import SR5Runner from './SR5Runner';\r\nimport SR5Grunt from './SR5Grunt';\r\nimport { ActorType } from './types/ActorType';\r\nimport SR5BaseActor, { ISR5BaseActorDataContainer } from './SR5BaseActor';\r\nimport AbstractActorFactory, { IPreCreateActorData, IPreCreateActorOptions } from './factory/AbstractActorFactory';\r\nimport RunnerFactory from './factory/RunnerFactory';\r\nimport GruntFactory from './factory/GruntFactory';\r\n\r\nexport default class SR5ActorProxy extends Actor {\r\n    // <editor-fold desc=\"Static Properties\"></editor-fold>\r\n    // <editor-fold desc=\"Static Methods\">\r\n\r\n    static async create(data: IPreCreateActorData, options: IPreCreateActorOptions): Promise<Entity> {\r\n        // We use a factory for default data instead of the template. This allows\r\n        // us to correctly synchronize our internal types - the data template is\r\n        // instead used only to create containers in which the data will be stored\r\n        // Handling this internally has a number of benefits. Mostly it allows strong\r\n        // and more thorough typing of data where the JSON template does not.\r\n        let factory: AbstractActorFactory<ISR5BaseActorDataContainer>;\r\n        switch (data.type) {\r\n            case ActorType.Runner:\r\n                factory = new RunnerFactory();\r\n                break;\r\n            case ActorType.Grunt:\r\n                factory = new GruntFactory();\r\n                break;\r\n        }\r\n        // This will only compile if *every* actor type is handled\r\n        const factoryData = factory.create(data);\r\n        return super.create(factoryData, options);\r\n    }\r\n\r\n    // </editor-fold>\r\n    // <editor-fold desc=\"Properties\">\r\n\r\n    private readonly _implementation: SR5BaseActor;\r\n\r\n    // </editor-fold>\r\n    // <editor-fold desc=\"Constructor & Initialization\">\r\n\r\n    constructor(data: ActorData, options?: any) {\r\n        super(data, options);\r\n\r\n        switch (data.type as ActorType) {\r\n            case ActorType.Runner:\r\n                this._implementation = new SR5Runner(this, data, options);\r\n                break;\r\n            case ActorType.Grunt:\r\n                this._implementation = new SR5Grunt(this, data, options);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /** @override */\r\n    prepareData(): void {\r\n        if (this._implementation !== undefined) {\r\n            this._implementation.prepareData();\r\n        }\r\n\r\n        return super.prepareData();\r\n    }\r\n    /** @override */\r\n    prepareEmbeddedEntities(): void {\r\n        if (this._implementation !== undefined) {\r\n            this._implementation.prepareEmbeddedEntities();\r\n        }\r\n\r\n        return super.prepareEmbeddedEntities();\r\n    }\r\n\r\n    // </editor-fold>\r\n    // <editor-fold desc=\"Getters & Setters\">\r\n\r\n    public get Impl(): SR5BaseActor {\r\n        return this._implementation;\r\n    }\r\n\r\n    // </editor-fold>\r\n    // <editor-fold desc=\"Instance Methods\">\r\n\r\n    // TODO:\r\n    //  I think there shouldn't need to be any more methods proxied.\r\n    //  However we may notice data not updating properly. If so, we\r\n    //  can simply proxy update to the actor implementation.\r\n\r\n    // </editor-fold>\r\n}\r\n","import SR5ActorProxy from './SR5ActorProxy';\r\nimport SR5BaseActorSheet from './sheet/SR5BaseActorSheet';\r\nimport { ActorType } from './types/ActorType';\r\n\r\nexport interface ISR5BaseActorDataContainer extends ActorData {\r\n    type: ActorType;\r\n    data: ISR5BaseActorData;\r\n}\r\nexport interface ISR5BaseActorData {}\r\n\r\nexport default abstract class SR5BaseActor extends Actor {\r\n    // <editor-fold desc=\"Static Properties\"></editor-fold>\r\n    // <editor-fold desc=\"Static Methods\"></editor-fold>\r\n    // <editor-fold desc=\"Properties\">\r\n\r\n    public data: ISR5BaseActorDataContainer;\r\n    public proxy: SR5ActorProxy;\r\n\r\n    // </editor-fold>\r\n    // <editor-fold desc=\"Constructor & Initialization\">\r\n\r\n    constructor(proxy: SR5ActorProxy, data: ActorData, options?: any) {\r\n        super(data, options);\r\n\r\n        // TODO: Safer cast. Should be true atm.\r\n        this.data = data as ISR5BaseActorDataContainer;\r\n        this.proxy = proxy;\r\n    }\r\n\r\n    // </editor-fold>\r\n    // <editor-fold desc=\"Getters & Setters\">\r\n\r\n    get sheet(): SR5BaseActorSheet<SR5BaseActor> {\r\n        // TODO: Figure out safe cast.\r\n        return this.proxy.sheet as SR5BaseActorSheet<SR5BaseActor>;\r\n    }\r\n\r\n    // </editor-fold>\r\n    // <editor-fold desc=\"Instance Methods\"></editor-fold>\r\n}\r\n\r\nexport function isActorOfType<T extends SR5BaseActor>(actor: Actor): actor is T {\r\n    return true;\r\n}\r\n","import SR5BaseActor, { ISR5BaseActorData, ISR5BaseActorDataContainer } from './SR5BaseActor';\r\nimport { ActorType } from './types/ActorType';\r\n\r\nexport interface ISR5GruntDataContainer extends ISR5BaseActorDataContainer {\r\n    data: ISR5GruntData;\r\n    type: ActorType.Grunt\r\n}\r\nexport interface ISR5GruntData extends ISR5BaseActorData {}\r\n\r\nexport default class SR5Grunt extends SR5BaseActor {\r\n    // <editor-fold desc=\"Static Properties\"></editor-fold>\r\n    // <editor-fold desc=\"Static Methods\"></editor-fold>\r\n    // <editor-fold desc=\"Properties\">\r\n\r\n    data: ISR5GruntDataContainer;\r\n\r\n    // </editor-fold>\r\n    // <editor-fold desc=\"Constructor & Initialization\"></editor-fold>\r\n    // <editor-fold desc=\"Getters & Setters\"></editor-fold>\r\n    // <editor-fold desc=\"Instance Methods\"></editor-fold>\r\n\r\n    prepareData() {\r\n        super.prepareData();\r\n    }\r\n\r\n    prepareEmbeddedEntities() {\r\n        super.prepareEmbeddedEntities();\r\n    }\r\n}\r\n\r\nexport function isGrunt(actor: Actor): actor is SR5Grunt {\r\n    return actor.data.type === ActorType.Grunt;\r\n}\r\n","import SR5BaseActor, { ISR5BaseActorData, ISR5BaseActorDataContainer } from './SR5BaseActor';\r\nimport SR5ActorProxy from './SR5ActorProxy';\r\nimport { RunnerAttributes } from '../common/Attribute';\r\nimport { ActiveSkillList, KnowledgeSkillList } from '../common/Skills';\r\nimport { ActorType } from './types/ActorType';\r\nimport SR5Grunt from './SR5Grunt';\r\n\r\n// TODO: Assumes Foundry will be enforcing types - as we can see here\r\n//  it's technically possible to get unexpected results.\r\nexport interface ISR5RunnerDataContainer extends ISR5BaseActorDataContainer {\r\n    data: ISR5RunnerData;\r\n}\r\nexport interface ISR5RunnerData extends ISR5BaseActorData {\r\n    attributes: RunnerAttributes;\r\n    skills: {\r\n        active: ActiveSkillList;\r\n        knowledge: KnowledgeSkillList;\r\n    };\r\n}\r\n\r\nexport default class SR5Runner extends SR5BaseActor {\r\n    // <editor-fold desc=\"Static Properties\"></editor-fold>\r\n    // <editor-fold desc=\"Static Methods\"></editor-fold>\r\n    // <editor-fold desc=\"Properties\">\r\n\r\n    data: ISR5RunnerDataContainer;\r\n\r\n    // </editor-fold>\r\n    // <editor-fold desc=\"Constructor & Initialization\">\r\n\r\n    constructor(proxy: SR5ActorProxy, data: ActorData, options: any) {\r\n        super(proxy, data, options);\r\n\r\n        console.warn(this);\r\n    }\r\n\r\n    // </editor-fold>\r\n    // <editor-fold desc=\"Getters & Setters\"></editor-fold>\r\n    // <editor-fold desc=\"Instance Methods\"></editor-fold>\r\n}\r\n\r\nexport function isRunner(actor: Actor): actor is SR5Runner {\r\n    return actor.data.type === ActorType.Runner;\r\n}\r\n","import { ISR5BaseActorDataContainer } from '../SR5BaseActor';\r\nimport { ActorType } from '../types/ActorType';\r\n\r\nexport interface IPreCreateActorOptions {\r\n    renderSheet: boolean;\r\n    temporary?: boolean;\r\n}\r\n\r\nexport interface IPreCreateActorData {\r\n    folder: string | undefined;\r\n    name: string;\r\n    type: ActorType;\r\n\r\n    [key: string]: any;\r\n}\r\n\r\ntype ExcludedKeys = 'token';\r\ntype OptionalKeys = 'img' | 'flags';\r\n\r\n// prettier-ignore\r\ntype RequiredData<T extends ISR5BaseActorDataContainer> = Omit<T, ExcludedKeys | OptionalKeys>;\r\n// prettier-ignore\r\ntype OptionalData<T extends ISR5BaseActorDataContainer> = Partial<Pick<T, OptionalKeys>>;\r\n\r\nexport type ActorFactoryData<T extends ISR5BaseActorDataContainer> = RequiredData<T> & OptionalData<T>;\r\n\r\nexport default abstract class AbstractActorFactory<T extends ISR5BaseActorDataContainer> {\r\n    public abstract create(data: IPreCreateActorData): ActorFactoryData<T>;\r\n}\r\n","import { ISR5BaseActorDataContainer } from '../SR5BaseActor';\r\nimport AbstractActorFactory, { ActorFactoryData, IPreCreateActorData } from './AbstractActorFactory';\r\n\r\nexport default abstract class BaseActorFactory extends AbstractActorFactory<ISR5BaseActorDataContainer> {\r\n    public create(data: IPreCreateActorData): ActorFactoryData<ISR5BaseActorDataContainer> {\r\n        return {\r\n            name: data.name,\r\n            type: data.type,\r\n            data: {},\r\n            flags: {},\r\n            img: '',\r\n        };\r\n    }\r\n}\r\n","import BaseActorFactory from './BaseActorFactory';\r\nimport { ISR5GruntDataContainer } from '../SR5Grunt';\r\nimport { ActorFactoryData, IPreCreateActorData } from './AbstractActorFactory';\r\nimport { ActorType } from '../types/ActorType';\r\n\r\nexport default class GruntFactory extends BaseActorFactory {\r\n    create(data: IPreCreateActorData): ActorFactoryData<ISR5GruntDataContainer> {\r\n        return {\r\n            ...super.create(data),\r\n            type: ActorType.Grunt\r\n        };\r\n    }\r\n}\r\n","\r\nimport { AttributeName, RunnerAttributes } from '../../common/Attribute';\r\nimport { ActiveSkillList, ActiveSkillName } from '../../common/Skills';\r\nimport BaseActorFactory from './BaseActorFactory';\r\nimport { ISR5RunnerDataContainer } from '../SR5Runner';\r\nimport { ActorFactoryData, IPreCreateActorData } from './AbstractActorFactory';\r\n\r\nexport default class RunnerFactory extends BaseActorFactory {\r\n    create(data: IPreCreateActorData): ActorFactoryData<ISR5RunnerDataContainer> {\r\n        const superData = super.create(data);\r\n        let attributes: RunnerAttributes = {\r\n            body: {\r\n                name: AttributeName.Body,\r\n                value: 1,\r\n            },\r\n            agility: {\r\n                name: AttributeName.Agility,\r\n                value: 1,\r\n            },\r\n            charisma: {\r\n                name: AttributeName.Charisma,\r\n                value: 1,\r\n            },\r\n            intuition: {\r\n                name: AttributeName.Intuition,\r\n                value: 1,\r\n            },\r\n            logic: {\r\n                name: AttributeName.Logic,\r\n                value: 1,\r\n            },\r\n            reaction: {\r\n                name: AttributeName.Reaction,\r\n                value: 1,\r\n            },\r\n            strength: {\r\n                name: AttributeName.Strength,\r\n                value: 1,\r\n            },\r\n            willpower: {\r\n                name: AttributeName.Willpower,\r\n                value: 1,\r\n            },\r\n\r\n            edge: {\r\n                name: AttributeName.Edge,\r\n                value: 1,\r\n            },\r\n\r\n            essence: {\r\n                name: AttributeName.Essence,\r\n                value: 6,\r\n            },\r\n\r\n            magic: {\r\n                name: AttributeName.Magic,\r\n                value: 0,\r\n            },\r\n            resonance: {\r\n                name: AttributeName.Resonance,\r\n                value: 0,\r\n            },\r\n            depth: {\r\n                name: AttributeName.Depth,\r\n                value: 0,\r\n            },\r\n        };\r\n\r\n        let skills: ActiveSkillList = {\r\n            archery: {\r\n                name: ActiveSkillName.Archery,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Agility,\r\n            },\r\n            automatics: {\r\n                name: ActiveSkillName.Automatics,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Agility,\r\n            },\r\n            blades: {\r\n                name: ActiveSkillName.Blades,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Agility,\r\n            },\r\n            clubs: {\r\n                name: ActiveSkillName.Clubs,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Agility,\r\n            },\r\n            heavy_weapons: {\r\n                name: ActiveSkillName.HeavyWeapons,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Agility,\r\n            },\r\n            longarms: {\r\n                name: ActiveSkillName.Longarms,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Agility,\r\n            },\r\n            pistols: {\r\n                name: ActiveSkillName.Pistols,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Agility,\r\n            },\r\n            throwing_weapons: {\r\n                name: ActiveSkillName.ThrowingWeapons,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Agility,\r\n            },\r\n            unarmed_combat: {\r\n                name: ActiveSkillName.UnarmedCombat,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Agility,\r\n            },\r\n            disguise: {\r\n                name: ActiveSkillName.Disguise,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Intuition,\r\n            },\r\n            diving: {\r\n                name: ActiveSkillName.Diving,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Body,\r\n            },\r\n            escape_artist: {\r\n                name: ActiveSkillName.EscapeArtist,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Agility,\r\n            },\r\n            flight: {\r\n                name: ActiveSkillName.Flight,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Agility,\r\n            },\r\n            free_fall: {\r\n                name: ActiveSkillName.FreeFall,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Body,\r\n            },\r\n            gymnastics: {\r\n                name: ActiveSkillName.Gymnastics,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Agility,\r\n            },\r\n            palming: {\r\n                name: ActiveSkillName.Palming,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Agility,\r\n            },\r\n            perception: {\r\n                name: ActiveSkillName.Perception,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Intuition,\r\n            },\r\n            running: {\r\n                name: ActiveSkillName.Running,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Strength,\r\n            },\r\n            sneaking: {\r\n                name: ActiveSkillName.Sneaking,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Agility,\r\n            },\r\n            survival: {\r\n                name: ActiveSkillName.Survival,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Willpower,\r\n            },\r\n            swimming: {\r\n                name: ActiveSkillName.Swimming,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Strength,\r\n            },\r\n            tracking: {\r\n                name: ActiveSkillName.Tracking,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Intuition,\r\n            },\r\n            con: {\r\n                name: ActiveSkillName.Con,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Charisma,\r\n            },\r\n            etiquette: {\r\n                name: ActiveSkillName.Etiquette,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Charisma,\r\n            },\r\n            impersonation: {\r\n                name: ActiveSkillName.Impersonation,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Charisma,\r\n            },\r\n            instruction: {\r\n                name: ActiveSkillName.Instruction,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Charisma,\r\n            },\r\n            intimidation: {\r\n                name: ActiveSkillName.Intimidation,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Charisma,\r\n            },\r\n            leadership: {\r\n                name: ActiveSkillName.Leadership,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Charisma,\r\n            },\r\n            negotiation: {\r\n                name: ActiveSkillName.Negotiation,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Charisma,\r\n            },\r\n            performance: {\r\n                name: ActiveSkillName.Performance,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Charisma,\r\n            },\r\n            alchemy: {\r\n                name: ActiveSkillName.Alchemy,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Magic,\r\n            },\r\n            arcana: {\r\n                name: ActiveSkillName.Arcana,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Logic,\r\n            },\r\n            artificing: {\r\n                name: ActiveSkillName.Artificing,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Magic,\r\n            },\r\n            assensing: {\r\n                name: ActiveSkillName.Assensing,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Intuition,\r\n            },\r\n            astral_combat: {\r\n                name: ActiveSkillName.AstralCombat,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Willpower,\r\n            },\r\n            banishing: {\r\n                name: ActiveSkillName.Banishing,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Magic,\r\n            },\r\n            binding: {\r\n                name: ActiveSkillName.Binding,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Magic,\r\n            },\r\n            counterspelling: {\r\n                name: ActiveSkillName.Counterspelling,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Magic,\r\n            },\r\n            disenchanting: {\r\n                name: ActiveSkillName.Disenchanting,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Magic,\r\n            },\r\n            ritual_spellcasting: {\r\n                name: ActiveSkillName.RitualSpellcasting,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Magic,\r\n            },\r\n            spellcasting: {\r\n                name: ActiveSkillName.Spellcasting,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Magic,\r\n            },\r\n            summoning: {\r\n                name: ActiveSkillName.Summoning,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Magic,\r\n            },\r\n            compiling: {\r\n                name: ActiveSkillName.Compiling,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Resonance,\r\n            },\r\n            decompiling: {\r\n                name: ActiveSkillName.Decompiling,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Resonance,\r\n            },\r\n            registering: {\r\n                name: ActiveSkillName.Registering,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Resonance,\r\n            },\r\n            aeronautics_mechanic: {\r\n                name: ActiveSkillName.AeronauticsMechanic,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Logic,\r\n            },\r\n            automotive_mechanic: {\r\n                name: ActiveSkillName.AutomotiveMechanic,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Logic,\r\n            },\r\n            industrial_mechanic: {\r\n                name: ActiveSkillName.IndustrialMechanic,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Logic,\r\n            },\r\n            nautical_mechanic: {\r\n                name: ActiveSkillName.NauticalMechanic,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Logic,\r\n            },\r\n            animal_handling: {\r\n                name: ActiveSkillName.AnimalHandling,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Charisma,\r\n            },\r\n            armorer: {\r\n                name: ActiveSkillName.Armorer,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Logic,\r\n            },\r\n            artisan: {\r\n                name: ActiveSkillName.Artisan,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Intuition,\r\n            },\r\n            biotechnology: {\r\n                name: ActiveSkillName.Biotechnology,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Logic,\r\n            },\r\n            chemistry: {\r\n                name: ActiveSkillName.Chemistry,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Logic,\r\n            },\r\n            computer: {\r\n                name: ActiveSkillName.Computer,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Logic,\r\n            },\r\n            cybercombat: {\r\n                name: ActiveSkillName.Cybercombat,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Logic,\r\n            },\r\n            cybertechnology: {\r\n                name: ActiveSkillName.Cybertechnology,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Logic,\r\n            },\r\n            demolitions: {\r\n                name: ActiveSkillName.Demolitions,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Logic,\r\n            },\r\n            electronic_warfare: {\r\n                name: ActiveSkillName.ElectronicWarfare,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Logic,\r\n            },\r\n            first_aid: {\r\n                name: ActiveSkillName.FirstAid,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Logic,\r\n            },\r\n            forgery: {\r\n                name: ActiveSkillName.Forgery,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Logic,\r\n            },\r\n            hacking: {\r\n                name: ActiveSkillName.Hacking,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Logic,\r\n            },\r\n            hardware: {\r\n                name: ActiveSkillName.Hardware,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Logic,\r\n            },\r\n            locksmith: {\r\n                name: ActiveSkillName.Locksmith,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Agility,\r\n            },\r\n            medicine: {\r\n                name: ActiveSkillName.Medicine,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Logic,\r\n            },\r\n            navigation: {\r\n                name: ActiveSkillName.Navigation,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Intuition,\r\n            },\r\n            software: {\r\n                name: ActiveSkillName.Software,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Logic,\r\n            },\r\n            gunnery: {\r\n                name: ActiveSkillName.Gunnery,\r\n                value: 0,\r\n                canDefault: true,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Agility,\r\n            },\r\n            pilot_aerospace: {\r\n                name: ActiveSkillName.PilotAerospace,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Reaction,\r\n            },\r\n            pilot_aircraft: {\r\n                name: ActiveSkillName.PilotAircraft,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Reaction,\r\n            },\r\n            pilot_walker: {\r\n                name: ActiveSkillName.PilotWalker,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Reaction,\r\n            },\r\n            pilot_ground_craft: {\r\n                name: ActiveSkillName.PilotGroundCraft,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Reaction,\r\n            },\r\n            pilot_water_craft: {\r\n                name: ActiveSkillName.PilotWaterCraft,\r\n                value: 0,\r\n                canDefault: false,\r\n                specializations: [],\r\n                defaultAttribute: AttributeName.Reaction,\r\n            },\r\n        };\r\n\r\n        return {\r\n            ...superData,\r\n            data: {\r\n                attributes,\r\n                skills: {\r\n                    active: skills,\r\n                    knowledge: {},\r\n                },\r\n            },\r\n        };\r\n    }\r\n}\r\n","import SR5BaseActor, { isActorOfType } from '../SR5BaseActor';\r\nimport SR5ActorProxy from '../SR5ActorProxy';\r\nimport { ActorType } from '../types/ActorType';\r\n\r\nexport default abstract class SR5BaseActorSheet<T extends SR5BaseActor> extends ActorSheet {\r\n    // <editor-fold desc=\"Static Properties\"></editor-fold>\r\n    // <editor-fold desc=\"Static Methods\"></editor-fold>\r\n    // <editor-fold desc=\"Properties\"></editor-fold>\r\n    // <editor-fold desc=\"Constructor & Initialization\">\r\n\r\n    protected constructor(...args: any) {\r\n        super(...args);\r\n    }\r\n\r\n    // </editor-fold>\r\n    // <editor-fold desc=\"Getters & Setters\">\r\n\r\n    get actor(): T {\r\n        // TODO: Figure out how to more safely cast this.\r\n        return (super.actor as SR5ActorProxy).Impl as T;\r\n    }\r\n\r\n    get id(): string {\r\n        return `actor-${this.actor.id}`;\r\n    }\r\n\r\n    // </editor-fold>\r\n    // <editor-fold desc=\"Instance Methods\">\r\n\r\n    getData(): ActorSheetData {\r\n        const data = super.getData();\r\n\r\n        data['CONST'] = {\r\n            ActorType: ActorType,\r\n        };\r\n\r\n        console.warn(`Sheet is of type ${this.constructor.name}`);\r\n        console.warn(data);\r\n        console.warn(super.actor);\r\n\r\n        return data;\r\n    }\r\n\r\n    protected activateListeners(html: JQuery | HTMLElement) {\r\n        console.warn(html);\r\n        super.activateListeners(html);\r\n    }\r\n\r\n    close(): Promise<void> {\r\n        console.warn(this.form);\r\n\r\n        return super.close();\r\n    }\r\n\r\n    // </editor-fold>\r\n}\r\n","import SR5BaseActorSheet from './SR5BaseActorSheet';\r\nimport SR5Grunt from '../SR5Grunt';\r\nimport { ActorType } from '../types/ActorType';\r\n\r\nexport default class SR5GruntSheet extends SR5BaseActorSheet<SR5Grunt> {\r\n    // <editor-fold desc=\"Static Properties\"></editor-fold>\r\n    // <editor-fold desc=\"Static Methods\"></editor-fold>\r\n    // <editor-fold desc=\"Properties\"></editor-fold>\r\n    // <editor-fold desc=\"Constructor & Initialization\">\r\n\r\n    constructor(...args: any) {\r\n        super(...args);\r\n    }\r\n\r\n    // </editor-fold>\r\n    // <editor-fold desc=\"Getters & Setters\">\r\n\r\n    get template(): string {\r\n        return `systems/shadowrun5e/dist/templates/test/grunt.html`;\r\n    }\r\n\r\n    // </editor-fold>\r\n    // <editor-fold desc=\"Instance Methods\"></editor-fold>\r\n}\r\n","import SR5BaseActorSheet from './SR5BaseActorSheet';\r\nimport SR5Runner from '../SR5Runner';\r\nimport { ActorType } from '../types/ActorType';\r\n\r\nexport default class SR5RunnerSheet extends SR5BaseActorSheet<SR5Runner> {\r\n    // <editor-fold desc=\"Static Properties\"></editor-fold>\r\n    // <editor-fold desc=\"Static Methods\"></editor-fold>\r\n    // <editor-fold desc=\"Properties\"></editor-fold>\r\n    // <editor-fold desc=\"Constructor & Initialization\">\r\n\r\n    constructor(data: BaseEntityData, options?: any) {\r\n        super(data, options);\r\n    }\r\n\r\n    // </editor-fold>\r\n    // <editor-fold desc=\"Getters & Setters\">\r\n\r\n    get template(): string {\r\n        return `systems/shadowrun5e/dist/templates/test/runner.html`;\r\n    }\r\n\r\n    // </editor-fold>\r\n    // <editor-fold desc=\"Instance Methods\">\r\n\r\n    getData(): ActorSheetData {\r\n        const data = super.getData();\r\n        return data;\r\n    }\r\n\r\n    // </editor-fold>\r\n}\r\n","export enum ActorType {\r\n    Runner = 'Runner',\r\n    Grunt = 'Grunt',\r\n    // Contact = 'Contact',\r\n    // Spirit = 'Spirit',\r\n    // Sprite = 'Sprite',\r\n    // Vehicle = 'Vehicle',\r\n    // Critter = 'Critter',\r\n    // Host = 'Host',\r\n    // IC = 'IC',\r\n}\r\n","export enum PhysicalAttributeName {\r\n    Body = 'body',\r\n    Agility = 'agility',\r\n    Reaction = 'reaction',\r\n    Strength = 'strength',\r\n}\r\n\r\nexport enum MentalAttributeName {\r\n    Logic = 'logic',\r\n    Intuition = 'intuition',\r\n    Charisma = 'charisma',\r\n    Willpower = 'willpower',\r\n}\r\n\r\nexport enum SpecialAttributeName {\r\n    Edge = 'edge',\r\n    Essence = 'essence',\r\n    Magic = 'magic',\r\n    Resonance = 'resonance',\r\n    Depth = 'depth',\r\n}\r\n\r\nexport enum MatrixAttributeName {\r\n    Attack = 'attack',\r\n    Sleaze = 'sleaze',\r\n    DataProcessing = 'data_processing',\r\n    Firewall = 'firewall',\r\n}\r\n\r\nexport const AttributeName = { ...PhysicalAttributeName, ...MentalAttributeName, ...SpecialAttributeName, ...MatrixAttributeName };\r\nexport type AttributeName = PhysicalAttributeName | MentalAttributeName | SpecialAttributeName | MatrixAttributeName;\r\n\r\nexport const RunnerAttributeName = { ...PhysicalAttributeName, ...MentalAttributeName, ...SpecialAttributeName };\r\nexport type RunnerAttributeName = PhysicalAttributeName | MentalAttributeName | SpecialAttributeName;\r\n\r\nexport interface Attribute<TName extends AttributeName> {\r\n    name: TName; // TODO: Locale keys need arrangement for SR5.ATTRIBUTES.name\r\n    value: number;\r\n}\r\n\r\nexport type AttributeMap<TValues extends AttributeName> = {\r\n    [TKey in TValues]: Attribute<TKey>;\r\n};\r\n\r\n// Helper maps - Can use AttributeMap for custom mappings\r\nexport type PhysicalAttributes = AttributeMap<PhysicalAttributeName>;\r\nexport type MentalAttribute = AttributeMap<MentalAttributeName>;\r\nexport type SpecialAttributes = AttributeMap<SpecialAttributeName>;\r\nexport type RunnerAttributes = AttributeMap<RunnerAttributeName>;\r\nexport type MatrixAttributes = AttributeMap<MatrixAttributeName>;\r\n\r\n// export type AttributeField = BaseValuePair<number> &\r\n//     CanHideFiled &\r\n//     ModifiableValue &\r\n//     LabelField & {\r\n//     limit?: string;\r\n// };\r\n","import { AttributeName } from './Attribute';\r\n\r\nexport enum CombatSkillName {\r\n    Archery = 'archery',\r\n    Automatics = 'automatics',\r\n    Blades = 'blades',\r\n    Clubs = 'clubs',\r\n    // TODO: ExoticMeleeWeapon = 'exotic_melee_weapon',\r\n    // TODO: ExoticRangedWeapon = 'exotic_ranged_weapon',\r\n    HeavyWeapons = 'heavy_weapons',\r\n    Longarms = 'longarms',\r\n    Pistols = 'pistols',\r\n    ThrowingWeapons = 'throwing_weapons',\r\n    UnarmedCombat = 'unarmed_combat',\r\n}\r\n\r\nexport enum MagicalSkillName {\r\n    Alchemy = 'alchemy',\r\n    Arcana = 'arcana',\r\n    Artificing = 'artificing',\r\n    Assensing = 'assensing',\r\n    AstralCombat = 'astral_combat',\r\n    Banishing = 'banishing',\r\n    Binding = 'binding',\r\n    Counterspelling = 'counterspelling',\r\n    Disenchanting = 'disenchanting',\r\n    RitualSpellcasting = 'ritual_spellcasting',\r\n    Spellcasting = 'spellcasting',\r\n    Summoning = 'summoning',\r\n}\r\n\r\nexport enum PhysicalSkillName {\r\n    AnimalHandling = 'animal_handling',\r\n    Disguise = 'disguise',\r\n    Diving = 'diving',\r\n    EscapeArtist = 'escape_artist',\r\n    Flight = 'flight',\r\n    FreeFall = 'free_fall',\r\n    Gymnastics = 'gymnastics',\r\n    Palming = 'palming',\r\n    Perception = 'perception',\r\n    Running = 'running',\r\n    Sneaking = 'sneaking',\r\n    Survival = 'survival',\r\n    Swimming = 'swimming',\r\n    Tracking = 'tracking',\r\n}\r\n\r\nexport enum ResonanceSkillName {\r\n    Compiling = 'compiling',\r\n    Decompiling = 'decompiling',\r\n    Registering = 'registering',\r\n}\r\n\r\nexport enum SocialSkillName {\r\n    Con = 'con',\r\n    Etiquette = 'etiquette',\r\n    Impersonation = 'impersonation',\r\n    Instruction = 'instruction',\r\n    Intimidation = 'intimidation',\r\n    Leadership = 'leadership',\r\n    Negotiation = 'negotiation',\r\n    Performance = 'performance',\r\n}\r\n\r\nexport enum TechnicalSkillName {\r\n    AeronauticsMechanic = 'aeronautics_mechanic',\r\n    Armorer = 'armorer',\r\n    Artisan = 'artisan',\r\n    AutomotiveMechanic = 'automotive_mechanic',\r\n    Biotechnology = 'biotechnology',\r\n    Chemistry = 'chemistry',\r\n    Computer = 'computer',\r\n    Cybercombat = 'cybercombat',\r\n    Cybertechnology = 'cybertechnology',\r\n    Demolitions = 'demolitions',\r\n    ElectronicWarfare = 'electronic_warfare',\r\n    FirstAid = 'first_aid',\r\n    Forgery = 'forgery',\r\n    Hacking = 'hacking',\r\n    Hardware = 'hardware',\r\n    IndustrialMechanic = 'industrial_mechanic',\r\n    Locksmith = 'locksmith',\r\n    Medicine = 'medicine',\r\n    NauticalMechanic = 'nautical_mechanic',\r\n    Navigation = 'navigation',\r\n    Software = 'software',\r\n}\r\n\r\nexport enum VehicleSkillName {\r\n    Gunnery = 'gunnery',\r\n    PilotAerospace = 'pilot_aerospace',\r\n    PilotAircraft = 'pilot_aircraft',\r\n    // TODO: PilotExoticVehicle = 'pilot_exotic_vehicle',\r\n    PilotGroundCraft = 'pilot_ground_craft',\r\n    PilotWalker = 'pilot_walker',\r\n    PilotWaterCraft = 'pilot_water_craft',\r\n}\r\n\r\nexport const ActiveSkillName = {\r\n    ...CombatSkillName,\r\n    ...MagicalSkillName,\r\n    ...PhysicalSkillName,\r\n    ...ResonanceSkillName,\r\n    ...SocialSkillName,\r\n    ...TechnicalSkillName,\r\n    ...VehicleSkillName,\r\n};\r\n\r\nexport type ActiveSkillName =\r\n    | CombatSkillName\r\n    | MagicalSkillName\r\n    | PhysicalSkillName\r\n    | ResonanceSkillName\r\n    | SocialSkillName\r\n    | TechnicalSkillName\r\n    | VehicleSkillName;\r\n\r\nexport enum SkillGroupName {\r\n    Acting = 'acting',\r\n    Athletics = 'athletics',\r\n    Biotech = 'biotech',\r\n    CloseCombat = 'close_combat',\r\n    Conjuring = 'conjuring',\r\n    Cracking = 'cracking',\r\n    Electronics = 'electronics',\r\n    Enchanting = 'enchanting',\r\n    Firearms = 'firearms',\r\n    Influence = 'influence',\r\n    Engineering = 'engineering',\r\n    Outdoors = 'outdoors',\r\n    Sorcery = 'sorcery',\r\n    Stealth = 'stealth',\r\n    Tasking = 'tasking',\r\n}\r\n\r\nexport interface Skill<TName extends string> {\r\n    name: TName;\r\n    value: number;\r\n\r\n    defaultAttribute: AttributeName;\r\n    specializations: Array<string>;\r\n    canDefault: boolean;\r\n}\r\n\r\nexport interface ActiveSkill<TName extends ActiveSkillName> extends Skill<TName> {}\r\n\r\nexport enum KnowledgeSkillType {\r\n    Street = 'street',\r\n    Academic = 'academic',\r\n    Interest = 'interest',\r\n    Language = 'language',\r\n}\r\nexport interface KnowledgeSkill extends Skill<string> {\r\n    type: KnowledgeSkillType;\r\n}\r\n\r\nexport type ActiveSkillList = {\r\n    [TName in ActiveSkillName]: ActiveSkill<TName>;\r\n};\r\n\r\nexport type KnowledgeSkillList = {\r\n    [id in string]: KnowledgeSkill;\r\n};\r\n","import AbstractItemFactory, { IPreCreateItemData, IPreCreateItemOptions } from './factory/AbstractItemFactory';\r\nimport SR5BaseItem, { ISR5BaseItemDataContainer } from './SR5BaseItem';\r\nimport { ItemType } from './types/ItemType';\r\nimport ArmorFactory from './factory/ArmorFactory';\r\nimport WeaponFactory from './factory/WeaponFactory';\r\nimport AmmunitionFactory from './factory/AmmunitionFactory';\r\nimport MetatypeFactory from './factory/MetatypeFactory';\r\n\r\nexport default class SR5ItemProxy extends Item {\r\n    // <editor-fold desc=\"Static Properties\"></editor-fold>\r\n    // <editor-fold desc=\"Static Methods\"></editor-fold>\r\n    // <editor-fold desc=\"Properties\">\r\n\r\n    private _implementation: SR5BaseItem;\r\n\r\n    // </editor-fold>\r\n    // <editor-fold desc=\"Constructor & Initialization\">\r\n    static async create(data: IPreCreateItemData, options: IPreCreateItemOptions): Promise<Entity> {\r\n        // We use a factory for default data instead of the template. This allows\r\n        // us to correctly synchronize our internal types - the data template is\r\n        // instead used only to create containers in which the data will be stored\r\n        // Handling this internally has a number of benefits. Mostly it allows strong\r\n        // and more thorough typing of data where the JSON template does not.\r\n        let factory: AbstractItemFactory<ISR5BaseItemDataContainer>;\r\n        switch (data.type) {\r\n            case ItemType.Weapon:\r\n                factory = new WeaponFactory();\r\n                break;\r\n            case ItemType.Armor:\r\n                factory = new ArmorFactory();\r\n                break;\r\n            case ItemType.Ammunition:\r\n                factory = new AmmunitionFactory();\r\n                break;\r\n            case ItemType.Metatype:\r\n                factory = new MetatypeFactory();\r\n                break;\r\n        }\r\n        // This will only compile if *every* actor type is handled\r\n        const factoryData = factory.create(data);\r\n        return super.create(factoryData, options);\r\n    }\r\n    // </editor-fold>\r\n    // <editor-fold desc=\"Getters & Setters\"></editor-fold>\r\n    // <editor-fold desc=\"Instance Methods\">\r\n\r\n    /** @override */\r\n    update(data: any, options: any): Promise<Item> {\r\n        return this._implementation.update(data, options);\r\n    }\r\n    // </editor-fold>\r\n}\r\n","import { ISR5BaseItemDataContainer } from '../SR5BaseItem';\r\nimport { ItemType } from '../types/ItemType';\r\n\r\nexport interface IPreCreateItemOptions {\r\n    renderSheet: boolean;\r\n    temporary?: boolean;\r\n}\r\n\r\nexport interface IPreCreateItemData {\r\n    folder: string | undefined;\r\n    name: string;\r\n    type: ItemType;\r\n\r\n    [key: string]: any;\r\n}\r\n\r\ntype ExcludedKeys = 'token';\r\ntype OptionalKeys = 'flags';\r\n\r\n// prettier-ignore\r\ntype RequiredData<T extends ISR5BaseItemDataContainer> = Omit<T, ExcludedKeys | OptionalKeys>;\r\n// prettier-ignore\r\ntype OptionalData<T extends ISR5BaseItemDataContainer> = Partial<Pick<T, OptionalKeys>>;\r\n\r\nexport type ItemFactoryData<T extends ISR5BaseItemDataContainer> = RequiredData<T> & OptionalData<T>;\r\n\r\nexport default abstract class AbstractItemFactory<T extends ISR5BaseItemDataContainer> {\r\n    public abstract create(data: IPreCreateItemData): ItemFactoryData<T>;\r\n}\r\n","import { IPreCreateItemData, ItemFactoryData } from './AbstractItemFactory';\r\nimport BaseItemFactory from './BaseItemFactory';\r\nimport { ISR5AmmunitionDataContainer } from '../SR5Ammunition';\r\nimport { ItemType } from '../types/ItemType';\r\n\r\nexport default class AmmunitionFactory extends BaseItemFactory {\r\n    create(data: IPreCreateItemData): ItemFactoryData<ISR5AmmunitionDataContainer> {\r\n        return {\r\n            ...super.create(data),\r\n            type: ItemType.Ammunition\r\n        }\r\n    }\r\n}\r\n","import { IPreCreateItemData, ItemFactoryData } from './AbstractItemFactory';\r\nimport BaseItemFactory from './BaseItemFactory';\r\nimport { ISR5ArmorDataContainer } from '../SR5Armor';\r\nimport { ItemType } from '../types/ItemType';\r\n\r\nexport default class ArmorFactory extends BaseItemFactory {\r\n    create(data: IPreCreateItemData): ItemFactoryData<ISR5ArmorDataContainer> {\r\n        return {\r\n            ...super.create(data),\r\n            type: ItemType.Armor,\r\n        };\r\n    }\r\n}\r\n","import AbstractItemFactory, { IPreCreateItemData, ItemFactoryData } from './AbstractItemFactory';\r\nimport { ISR5BaseItemDataContainer } from '../SR5BaseItem';\r\n\r\nexport default abstract class BaseItemFactory extends AbstractItemFactory<ISR5BaseItemDataContainer> {\r\n    create(data: IPreCreateItemData): ItemFactoryData<ISR5BaseItemDataContainer> {\r\n        return {\r\n            data: {},\r\n            flags: {},\r\n            name: data.name,\r\n            type: data.type,\r\n        };\r\n    }\r\n}\r\n","import BaseItemFactory from './BaseItemFactory';\r\nimport { IPreCreateItemData, ItemFactoryData } from './AbstractItemFactory';\r\nimport { ISR5MetatypeDataContainer } from '../SR5Metatype';\r\nimport { ItemType } from '../types/ItemType';\r\n\r\nexport default class MetatypeFactory extends BaseItemFactory {\r\n    create(data: IPreCreateItemData): ItemFactoryData<ISR5MetatypeDataContainer> {\r\n        return {\r\n            ...super.create(data),\r\n            type: ItemType.Metatype,\r\n        };\r\n    }\r\n}\r\n","import BaseItemFactory from './BaseItemFactory';\r\nimport { IPreCreateItemData, ItemFactoryData } from './AbstractItemFactory';\r\nimport { ISR5WeaponDataContainer } from '../SR5Weapon';\r\nimport { ItemType } from '../types/ItemType';\r\n\r\nexport default class WeaponFactory extends BaseItemFactory {\r\n    create(data: IPreCreateItemData): ItemFactoryData<ISR5WeaponDataContainer> {\r\n        return {\r\n            ...super.create(data),\r\n            type: ItemType.Weapon,\r\n        };\r\n    }\r\n}\r\n","export default class SR5BaseItemSheet extends ItemSheet {\r\n    // <editor-fold desc=\"Static Properties\"></editor-fold>\r\n    // <editor-fold desc=\"Static Methods\"></editor-fold>\r\n    // <editor-fold desc=\"Properties\"></editor-fold>\r\n    // <editor-fold desc=\"Constructor & Initialization\"></editor-fold>\r\n    // <editor-fold desc=\"Getters & Setters\"></editor-fold>\r\n    // <editor-fold desc=\"Instance Methods\"></editor-fold>\r\n}\r\n","export enum ItemType {\r\n    Weapon = 'Weapon',\r\n    Armor = 'Armor',\r\n    // Device = 'Device',\r\n    // Program = 'Program',\r\n    Ammunition = 'Ammunition',\r\n    Metatype = 'Metatype',\r\n}\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}